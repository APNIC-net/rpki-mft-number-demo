#!/usr/bin/perl

use warnings;
use strict;

use APNIC::RPKI::CA;

use Cwd;
use File::Slurp qw(write_file);
use Getopt::Long;

sub usage
{
    print <<EOF;
Usage:
$0 --name {ca-name} --resources {IPv4/IPv6/ASN resources}
    [--parent-name {ca-name}]
    [--repo-dirname {repo-dirname}]
    [--hostname {hostname}]

Set up a new CA.  If no parent name is provided, this will be a root
CA.
EOF

    exit(10);
}

my %options;
GetOptions(\%options, 'name=s', 'resources=s', 'parent-name=s',
           'repo-dirname=s', 'hostname=s');
if (not $options{'name'}) {
    print "Please enter a name.\n";
    usage();
}
if (not $options{'resources'}) {
    print "Please enter resource details.\n";
    usage();
}

my ($name, $resources, $parent_name, $repo_dirname, $hostname) =
    @options{qw(name resources parent-name repo-dirname hostname)};

if (not $repo_dirname) {
    $repo_dirname = $name;
}
if (not $hostname) {
    $hostname = "localhost";
}

my @resource_parts = split /,/, $resources;
my @ip_resources = grep { /\./ or /:/ } @resource_parts;
my @as_resources = grep { not (/\./ or /:/) } @resource_parts;

system("mkdir -p data/cas/$name");
system("mkdir -p data/stg-repo");
system("mkdir -p data/repo");
my $cwd = cwd();
my $path = $cwd."/data/cas/$name";
my $ca = APNIC::RPKI::CA->new(ca_path => $path);
my $stg_repo = $cwd."/data/stg-repo";
my $repo = $cwd."/data/repo";
my $tal_path =
    $ca->initialise($name, (defined $parent_name),
                    $stg_repo, $repo, $repo_dirname,
                    $hostname, 873,
                    \@ip_resources, \@as_resources,
                    "/rrdp", $name, "localhost");

if (defined $parent_name) {
    my $request = $ca->get_ca_request($name, \@ip_resources, \@as_resources);
    my $signing_ca =
        ($parent_name)
            ? APNIC::RPKI::CA->new(ca_path => $cwd."/data/cas/$parent_name")
            : $ca;
    my ($response, $url) =
        $signing_ca->sign_ca_request($request, \@ip_resources, \@as_resources);
    $ca->install_ca_certificate($response, $url);
}

$ca->publish();

if (not defined $parent_name) {
    $tal_path =~ s/\/+/\//g;
    print "TAL path: $tal_path\n";
    my $last_tal_path = "$cwd/last-tal-path";
    $last_tal_path =~ s/\/+/\//g;
    write_file($last_tal_path, $tal_path);
    print "TAL path written to $last_tal_path\n";
}

1;
